<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_warrior_hero_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.1

marker = asset_get_index("obj_warrior_hero_maker")

target = 0

DOT = 15
delay = 0
is_attack = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay += 1

if instance_exists(obj_monster) {target = instance_nearest(x,y,obj_monster)}

if delay &gt;= DOT and instance_exists(target)
{
    if not instance_exists(marker) and point_distance(x,y,target.x,target.y) &lt; 40
    {
        image_index = 0;
        image_speed = 0.5; 
        image_xscale = (x - obj_cage.x)/(abs(x - obj_cage.x))
        sprite_index = spr_warrior_hero_attack;
        is_attack = true
        delay = 0
    }
}

depth = -y

if is_attack
{
    if instance_exists(marker) {is_attack = false}
    if image_index &gt; 7 {is_attack = false}
}
  
if not is_attack
{
    if speed = 0 {image_speed = 0.1; sprite_index = spr_warrior_hero_idle;}
    if speed != 0 {image_speed = 0.5; sprite_index = spr_warrior_hero_move;}
}


var char_speed = 10
if hspeed != 0 {image_xscale = -hspeed/char_speed}

if instance_exists(marker) 
{
    if x &gt; marker.x {hspeed = -char_speed} else if x = marker.x {hspeed = 0}
    if x &lt; marker.x {hspeed = char_speed} else if x = marker.x {hspeed = 0}
    if y &gt; marker.y {vspeed = -char_speed} else if y = marker.y {vspeed = 0}
    if y &lt; marker.y {vspeed = char_speed} else if y = marker.y {vspeed = 0}
    if abs(x - marker.x) &lt; char_speed*2+1 {x = marker.x; hspeed = 0}
    if abs(y - marker.y) &lt; char_speed*2+1 {y = marker.y; vspeed = 0}
}else {speed = 0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = spr_warrior_hero_attack
{
    if image_index = 2 or image_index = 3
    {
        other.hp -= 10    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.select_unit = id and not collision_point(mouse_x, mouse_y, UI_parent,true,true)
{
    instance_create(mouse_x,mouse_y,marker)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.select_unit = id
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.select_unit = id
{
    d3d_set_fog(true, c_white, 0, 0);
    for (i = 45; i &lt;= 405; i += 10)
    {
        draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(1/2,i),y+2+lengthdir_y(1/2,i),1.1*image_xscale,1.1,0,c_black,1)
    }
    d3d_set_fog(false, c_white, 0, 0);
}

draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
