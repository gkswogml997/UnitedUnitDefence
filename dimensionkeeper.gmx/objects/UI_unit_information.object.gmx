<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_unit_information</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>UI_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_height
y = 0

instance_create(x,y,UI_mugshots)
instance_create(x,y,UI_manual)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(global.select_unit)
{
    //일꾼
    if asset_get_index("obj_worker") = global.select_unit.object_index
    {
        if not instance_exists(UI_worker_manager)
            instance_create(x,y,UI_worker_manager);
    }
    else
        {instance_destroy(UI_worker_manager);}
    
    //베이직 타워
    if asset_get_index("obj_basic_tower") = global.select_unit.object_index
    {
        if not instance_exists(UI_tower_manager)
            instance_create(x,y,UI_tower_manager);
    }
    else
        {instance_destroy(UI_tower_manager);}
        
    //목재소
    if asset_get_index("obj_lumber_mill") = global.select_unit.object_index
    {
         if !global.select_unit.is_build
        {
            if not instance_exists(UI_lumber_mill_manager)
                instance_create(x,y,UI_lumber_mill_manager);
        } else
        {
            if instance_exists(UI_lumber_mill_manager) {instance_destroy(UI_lumber_mill_manager)}
        }
    }
    else
        {instance_destroy(UI_lumber_mill_manager);}
        
    //연구소
    if asset_get_index("obj_tower_lab") = global.select_unit.object_index
    {
        if !global.select_unit.is_upgrade
        {
            if not instance_exists(UI_tower_lab_manager)
                instance_create(x,y,UI_tower_lab_manager);
        } else
        {
            if instance_exists(UI_tower_lab_manager) {instance_destroy(UI_tower_lab_manager)}
        }
    }
    else
        {instance_destroy(UI_tower_lab_manager);}
        
    //마법사 영웅
    if asset_get_index("obj_wizard_hero") = global.select_unit.object_index
    {
        if not instance_exists(UI_wizard_manager)
            instance_create(x,y,UI_wizard_manager);
    }
    else
        {instance_destroy(UI_wizard_manager);}
    
    //성직자 영웅
    if asset_get_index("obj_priest_hero") = global.select_unit.object_index
    {
        if not instance_exists(UI_preist_manager)
            instance_create(x,y,UI_preist_manager);
    }
    else
        {instance_destroy(UI_preist_manager);}
        
    //궁수 영웅
    if asset_get_index("obj_archer_hero") = global.select_unit.object_index
    {
        if not instance_exists(UI_archer_manager)
            instance_create(x,y,UI_archer_manager);
    }
    else
        {instance_destroy(UI_archer_manager);}
    //나무꾼
    if asset_get_index("obj_lumberjack") = global.select_unit.object_index
    {
        if not instance_exists(UI_lumberjack_manager)
            instance_create(x,y,UI_lumberjack_manager);
    }
    else
        {instance_destroy(UI_lumberjack_manager);}
}

x = view_xview + view_wview - sprite_width
y = view_yview
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
