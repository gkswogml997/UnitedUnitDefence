<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gun_tower_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>owner_id = id
image_speed = 0.3
angle = point_direction(x,y,obj_cage.x,obj_cage.y)-90
image_xscale = 0.7
image_yscale = 0.7

DOT = 3
delay = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay += 1

if delay &gt; DOT
{
    instance_create(x,y,obj_gun_tower_bullet)
    delay = 0
}

depth = owner_id.depth - 1

if instance_exists(obj_monster)
{
    var target = instance_nearest(x,y,obj_monster)
    angle = point_direction(x,y,target.x,target.y) + 22.5
    
    if angle &gt; 360 {angle -= 360}
    if angle &lt; 0 {angle += 360}
    
    if angle &gt; 0 and angle &lt;= 45 {image_index = 0}
    if angle &gt; 45 and angle &lt;= 90 {image_index = 1}
    if angle &gt; 90 and angle &lt;= 135 {image_index = 2}
    if angle &gt; 135 and angle &lt;= 180 {image_index = 3}
    if angle &gt; 180 and angle &lt;= 225 {image_index = 4}
    if angle &gt; 225 and angle &lt;= 270 {image_index = 5}
    if angle &gt; 270 and angle &lt;= 315 {image_index = 6}
    if angle &gt; 315 and angle &lt;= 360 {image_index = 7}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.select_unit = owner_id
{
    d3d_set_fog(true, c_white, 0, 0);
    for (i = 45; i &lt;= 405; i += 10)
    {
        draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(1,i),y+lengthdir_y(1,i),1*image_xscale,1,0,c_black,1)
    }
    d3d_set_fog(false, c_white, 0, 0);
}

draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
